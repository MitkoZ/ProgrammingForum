@model ProgrammingForum.ViewModels.UserCommentsAndQuestionViewModel

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ViewQuestionViewModel.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ViewQuestionViewModel.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ViewQuestionViewModel.QuestionText)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ViewQuestionViewModel.QuestionText)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ViewQuestionViewModel.AskedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ViewQuestionViewModel.AskedBy)
        </dd>
    </dl>
    @if (Model.UsersCommentsViewModel != null && Model.UsersCommentsViewModel.Count > 0)
    {
        <h1>Answers</h1>

        for (int i = 0; i < Model.UsersCommentsViewModel.Count; i++)
        {
            using (Html.BeginForm("CommentAComment", "Questions", FormMethod.Post))
            {
                int margin = 0;
                margin = @Model.UsersCommentsViewModel[i].Lineage.Count(x => x.Equals('/')) * 100;
                string marginStr = margin.ToString() + "px";
                <div style="margin-left:@marginStr;">
                    <b>Comment To: </b>@Model.UsersCommentsViewModel[i].CommentTo<br />
                    <b>From Username: </b>@Html.DisplayFor(model => model.UsersCommentsViewModel[i].Username)<br />
                    <b>Date: </b>@Html.DisplayFor(model => model.UsersCommentsViewModel[i].DateCommented)<br />
                    <b>Comment:</b> @Html.DisplayFor(model => model.UsersCommentsViewModel[i].CommentedTextFormatted)<br />
                    @{
                        string guidForLabel = @Guid.NewGuid().ToString();
                        string guidForContainer = @Guid.NewGuid().ToString();
                    }
                    <b id="@guidForLabel" style="color:blue;">Add Comment:</b>
                    <script>
                        $(document).ready(function () {
                                 $("#" + "@guidForLabel").click(function () {
                                $("#" + "@guidForContainer").show();
                            });
                        })
                    </script>
                    <div id="@guidForContainer">
                        @Html.TextBox("CommentText", null, new { @class = "form-control" })
                        <input type="submit" value="Post Your comment" class="btn btn-default" style="background-color: #0095ff; color:white;" />
                    </div>
                    <script>
                       $("#"+"@guidForContainer").hide();
                    </script>
                    @Html.Hidden("QuestionId", Model.ViewQuestionViewModel.QuestionId)
                    @Html.Hidden("CommentId", Model.UsersCommentsViewModel[i].CommentId)

                </div>
                <br />
            }
        }
    }
</div>
<div>
    <h2>Your Answer:</h2>
    @using (Html.BeginForm())
    {
        @Html.TextArea("CommentText", null, 15, 100, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Post Your Answer" class="btn btn-default" style="background-color: #0095ff; color:white;" />
                @Html.ValidationMessage("CommentText", "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.ViewQuestionViewModel.QuestionId)
    }
</div>
<p>
    @Html.ActionLink("Back to Home Page", "Index", "Home")
</p>
